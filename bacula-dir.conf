#
# Default Bacula Director Configuration file
#
#  The only thing that MUST be changed is to add one or more
#   file or directory names in the Include directive of the
#   FileSet resource.
#
#  For Bacula release 9.4.2 (04 February 2019) -- ubuntu 20.04
#
#  You might also want to change the default email address
#   from root to your address.  See the "mail" and "operator"
#   directives in the Messages resource.
#
# Copyright (C) 2000-2017 Kern Sibbald
# License: BSD 2-Clause; see file LICENSE-FOSS
#


######################################
####### BACULA SERVER
######################################

Director {                            # define myself
  Name = server-dir
  DIRport = 9101                # where we listen for UA connections
  QueryFile = "/etc/bacula/scripts/query.sql"
  WorkingDirectory = "/var/lib/bacula"
  PidDirectory = "/run/bacula"
  Password = "_PASSWORD_TO_ACCESS_CLIENT-SERVER_"
  Messages = Daemon
  DirAddress = server-bkp.domain.co.nz
}

######################################
####### STORAGE
######################################

Storage {
  Name = File
# Do not use "localhost" here
  Address = bacula                 # N.B. Use a fully qualified name. I recommend adding the address on the hosts file, this is your bacula-server
  SDPort = 9103
  Password = "_PASSWORD_TO_ACCESS_CLIENT-SERVER_"
  Device = FileStorage
  Media Type = File
}

Storage {
  Name = stg-server-windows
  Address = bacula                 # N.B. Use a fully qualified name. I recommend adding the address on the hosts file, this is your bacula-server
  SDPort = 9103
  Password = "_PASSWORD_TO_ACCESS_CLIENT-SERVER_"
  Device = stg-server-001	   # This is the storage name created on bacula-sd.conf
  Media Type = File
}


######################################
####### POOL
######################################


# File Pool definition
# FULL

Pool {
  Name = File
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  Recycle Oldest Volume = yes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 1 days           # one year
  Maximum Volume Bytes = 5G           # Limit Volume size to something reasonable
  Maximum Volumes = 5                 # Limit number of Volumes in Pool
  Label Format = "File"               # Auto label
}

Pool {
  Name = full_server-linux01
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  Recycle Oldest Volume = yes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 1 days           # one year
  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
  Maximum Volumes = 3                 # Limit number of Volumes in Pool
  Label Format = "server-linux01-"    # Auto label
}


Pool {
  Name = full_server-windows01
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  Recycle Oldest Volume = yes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 7 days           # Retention
  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
  Maximum Volumes = 3                 # Limit number of Volumes in Pool
  Label Format = "server-windows01-"  # Auto label
}


# INCREMENTAL
# You can use a diferent pool to incremental backup.


Pool {
  Name = inc_server-linux01
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  Recycle Oldest Volume = yes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 1 days           # Retention
  Maximum Volume Bytes = 20G          # Limit Volume size to something reasonable
  Maximum Volumes = 2                 # Limit number of Volumes in Pool
  Label Format = "server-linux01-"    # Auto label
}

Pool {
  Name = inc_server-windows01
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  Recycle Oldest Volume = yes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 1 days           # Retention
  Maximum Volume Bytes = 5G           # Limit Volume size to something reasonable
  Maximum Volumes = 1                 # Limit number of Volumes in Pool
  Label Format = "server-windows01-"  # Auto label
}



######################################
####### CLIENTS
####### Create the clients and FileSet in sequence
######################################


# Bacula Server

# Client (File Services) to backup
Client {
  Name = server-fd
  Address = bacula
  FDPort = 9102
  Catalog = MyCatalog
  Password = "_PASSWORD_TO_ACCESS_CLIENT-SERVER_"
  File Retention = 30 days            # 30 days
  Job Retention = 30 days
  AutoPrune = yes                     # Prune expired Jobs/Files
}

FileSet {
  Name = "Full Set"
  Include {
  Options {
  signature = MD5
  }

File = /etc/bacula
  }

  Exclude {
    File = /var/lib/bacula
    File = /bacula
    File = /proc
    File = /tmp
    File = /sys
    File = /.journal
    File = /.fsck
  }
}

##==================================================

# Windows Client
# For Windows clients, you need to use forward slash / to set the directories

Client {
  Name = server-windows01-fd
  Address = 192.168.0.10
  FDPort = 9102
  Catalog = MyCatalog
  Password = _PASSWORD_TO_ACCESS_CLIENT-SERVER_
  File Retention = 7 days
  Job Retention = 7 days
  AutoPrune = yes                     # Prune expired Jobs/Files
}

FileSet {
  Name = fileset-windows01
  Include {
    File = C:/Users/xpto/Desktop
    File = C:/Logs
    File = E:/Application
    Options {
    signature = MD5
    compression = LZO
    }
  }
  Exclude {
    File = c:/windows
    File = "c:/program files"
    File = "c:/program files (x86)"
    File = c:/temp
    File = c:/Users/xpto/AppData
  }
}


##==================================================

# LINUX Client

Client {
  Name = server-linux01-fd
  Address = 192.168.0.11
  FDPort = 9102
  Catalog = MyCatalog
  Password = "_PASSWORD_TO_ACCESS_CLIENT-SERVER_"
  File Retention = 7 days
  Job Retention = 7 days
  AutoPrune = yes                     # Prune expired Jobs/Files
}

FileSet {
  Name = fileset-linux01
  Include {
  Options {
  signature = MD5
  }
File = /etc/bacula
File = /var/log
File = /var/lib/folder
  }

  Exclude {
    File = /var/lib/bacula
    File = /bacula
    File = /proc
    File = /tmp
    File = /sys
    File = /.journal
    File = /.fsck
    File = /
    File = /var/lib/firmware
  }
}


######################################
####### JOBS
######################################

#  Put your list of files here, preceded by 'File =', one per line
#    or include an external list with:
#
#    File = <file-name
#
#  Note: / backs up everything on the root partition.
#    if you have other partitions such as /usr or /home
#    you will probably want to add them too.
#
#  By default this is defined to point to the Bacula binary
#    directory to give a reasonable FileSet to backup to
#    disk storage during initial testing.
#
#
# If you backup the root directory, the following two excluded
#   files can be useful
#

### Backup


JobDefs {
  Name = "DefaultJob"
  Type = Backup
  Level = Incremental
  Client = server-fd
  FileSet = "Full Set"
  Schedule = "WeeklyCycle"
  Storage = File
  Messages = StandardMail
  Pool = File
  SpoolAttributes = yes
  Priority = 10
  Write Bootstrap = "/var/lib/bacula/%c.bsr"
}


Job {
  Name = bkp_server-linux
  JobDefs = DefaultJob
  Type = Backup
  Level = Full
  Schedule = "schedule_server-linux01"
  Client = server-linux01-fd		# Client name
  FileSet = fileset-linux01		# Name of fileset
  Storage = stg-linux01			# Storage name set up on bacula-sd.conf
  Pool = full_server-linux01
  Messages = StandardMail
}



Job {
  Name = bkp_server-windows
  JobDefs = DefaultJob
  Type = Backup
  Level = Full
  Schedule = "schedule_server-windows01"
  Client = server-windows01-fd		# Client name
  FileSet = fileset-windows01		# Name of fileset
  Storage = stg-windows01		# Storage name set up on bacula-sd.conf
  Pool = full_server-windows01
  Messages = StandardMail
}


######################################
####### SCHEDULE
######################################

Schedule {
  Name = schedule_server-windows01
  Run = Level=Full Pool=full_server-fs01 sat at 10:00
  Run = Level=Incremental Pool=inc_server-fs01 sun-fri at 19:30
  }


Schedule {
  Name = schedule_server-linux01
  Run = Level=Full Pool=full_server-ms01 sat at 10:00
  Run = Level=Incremental Pool=inc_server-ms01 sun-fri at 19:30
  }





# Scratch pool definition
Pool {
  Name = Scratch
  Pool Type = Backup
}


# Backup the catalog database (after the nightly save)
Job {
  Name = "BackupCatalog"
  JobDefs = "DefaultJob"
  Level = Full
  FileSet="Catalog"
  Schedule = "WeeklyCycleAfterBackup"
  # This creates an ASCII copy of the catalog
  # Arguments to make_catalog_backup.pl are:
  #  make_catalog_backup.pl <catalog-name>
  RunBeforeJob = "/etc/bacula/scripts/make_catalog_backup.pl MyCatalog"
  # This deletes the copy of the catalog
  RunAfterJob  = "/etc/bacula/scripts/delete_catalog_backup"
  Write Bootstrap = "/var/lib/bacula/%n.bsr"
  Priority = 11                   # run after main backup
}

#
# Standard Restore template, to be changed by Console program
#  Only one such job is needed for all Jobs/Clients/Storage ...
#


# List of files to be backed up


#
# When to do the backups, full backup on first sunday of the month,
#  differential (i.e. incremental since full) every other sunday,
#  and incremental backups other days
Schedule {
  Name = "WeeklyCycle"
  Run = Full 1st sun at 23:05
  Run = Differential 2nd-5th sun at 23:05
  Run = Incremental mon-sat at 23:05
}



####### CATALOG

# Generic catalog service
Catalog {
  Name = MyCatalog
  dbname = "bacula"; DB Address = "localhost"; DB Port= "3306"; dbuser = "bacula"; dbpassword = "bacula"
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full sun-sat at 23:10
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
  Options {
  signature = MD5
  }
  File = "/var/lib/bacula/bacula.sql"
  }
}



# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard
#
# NOTE! If you send to two email or more email addresses, you will need
#  to replace the %r in the from field (-f part) with a single valid
#  email address in both the mailcommand and the operatorcommand.
#  What this does is, it sets the email address that emails would display
#  in the FROM field, which is by default the same email as they're being
#  sent to.  However, if you send email to more than one address, then
#  you'll have to set the FROM address manually, to a single address.
#  for example, a 'no-reply@mydomain.com', is better since that tends to
#  tell (most) people that its coming from an automated source.

#
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
  operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = root = all, !skipped
  operator = root = mount
  console = all, !skipped, !saved
#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if they scroll off the console.
#
  append = "/var/log/bacula/bacula.log" = all, !skipped
  catalog = all
}


#
# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula XXXX\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = youremail@domain.com z = all, !skipped
  console = all, !skipped, !saved
  append = "/var/log/bacula/bacula.log" = all, !skipped
}


Messages {
   name = StandardMail
   mail = youremail@domain.com = all, !skipped
   console = all, !skipped, !saved
   append = "/var/log/bacula/bacula.log" = all, !skipped
   catalog = all
}



#Messages {
#  Name = StandardMail
#  mailcommand = "/usr/bin/mail -r Bacula -s \"Bacula Backup messages\" %r"
  #mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
#  mail = root = all, !skipped
 # console = all, !skipped, !saved
#  append = "/var/log/bacula/bacula.log" = all, !skipped
#}



#
# Restricted console used by tray-monitor to get the status of the director
#
Console {
  Name = server-mon
  Password = "_PASSWORD_TO_ACCESS_CLIENT-SERVER_"
  CommandACL = status, .status
}
